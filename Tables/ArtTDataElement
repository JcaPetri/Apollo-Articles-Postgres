-- Table: public.ArtTDataElement
DROP TABLE IF EXISTS public."ArtTDataElement";
CREATE TABLE IF NOT EXISTS public."ArtTDataElement"
(
    "IDNum" integer NOT NULL DEFAULT nextval('"ArtTDataElement_IDNum_Seq"'::regclass),
    "ID" uuid NOT NULL DEFAULT uuid_generate_v4(),
    "IDName" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "IDNameStructureIDn" integer NOT NULL,
    "ScopeIDn" integer NOT NULL,
    "BusinessUnitIDn" integer NOT NULL,
    "LanguageIDn" integer NOT NULL,
    "IDCode" integer NOT NULL,
    "DefinitionIDn" integer NOT NULL,
    "InformationTypeIDn" integer NOT NULL,
    "IDIsUsed" smallint NOT NULL,
    "StateIDn" smallint NOT NULL,
    "CreatedByIDn" integer NOT NULL,
    "LastModifiedByIDn" integer NOT NULL,
    "OwnerIDn" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateTimeStamp" timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "TableHistory" text COLLATE pg_catalog."default",
    CONSTRAINT "Pk_IDNum" PRIMARY KEY ("IDNum"),
    CONSTRAINT "Unique_ID" UNIQUE ("ID"),
    CONSTRAINT "Unique_IDNameScopeCompLang" UNIQUE ("IDName", "ScopeIDn", "BusinessUnitIDn", "LanguageIDn"),
    CONSTRAINT "Unique_IDScopeIDCode" UNIQUE ("ScopeIDn", "IDCode")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."ArtTDataElement"
    OWNER to postgres;

COMMENT ON TABLE public."ArtTDataElement"
    IS 'ArtTDataElement is the dictionary of the Articles module. This dictionary has a default language defined. In this way we maintain the integrity and non-duplication of information.
Each code entered generates an ID (uniqueidentifier) ​​and an IDNum unique autonumerical value.
The rest of the tables only have the IDNum. To determine what a code means, you should consult this table.
In order for the same IDName word to have different meanings depending on its use, it is defined for a Scope and BusinessUnit.
To respect all the rules the unique value must be the combination of: Name/Scope/BusinessUnit/Language.
is unique for a:
  Name -> is the code readable by the user
  Scope -> the Name must be unique for the application scope, usually a Table.
  BusinessUnit -> the Name must be unique for the scope and Business Unit.
  Language -> the Name language must be unique for the scope, business Unit and language.
Important: the object exists when it is created in the respective table, that it, is created in the dictionary does not affect the system.
Example: the pampa article is created in the dictionary, but it does not exist until it is created in the Articles table.';

COMMENT ON COLUMN public."ArtTDataElement"."IDNum"
    IS 'The IDNum is the autoincrement number';

COMMENT ON COLUMN public."ArtTDataElement"."ID"
    IS 'The ID is the uniqueidentifier auto generated V4';

COMMENT ON COLUMN public."ArtTDataElement"."IDName"
    IS 'The IDName is the user-readable code for the selected language.';

COMMENT ON COLUMN public."ArtTDataElement"."IDNameStructureIDn"
    IS 'The IDNameStructureIDn is the IDNum of the IDName structure, if the IDName is multivalued, here it refers to the structure.';

COMMENT ON COLUMN public."ArtTDataElement"."ScopeIDn"
    IS 'The ScopeIDn is the IdNum of the Scope, the Name must be unique for the scope of application, usually a Table';

COMMENT ON COLUMN public."ArtTDataElement"."BusinessUnitIDn"
    IS 'The BusinessUnitIDn is the IdNum of the Business Unit of the Company to which the IDName is assigned';

COMMENT ON COLUMN public."ArtTDataElement"."LanguageIDn"
    IS 'The LanguageIDn is the IdNum of the language in which the Name is defined';

COMMENT ON COLUMN public."ArtTDataElement"."IDCode"
    IS 'The IDCode is the unique code of the record for a scope and company.';

COMMENT ON COLUMN public."ArtTDataElement"."DefinitionIDn"
    IS 'The DefinitionIDn is the IdNum of the element definition type.';

COMMENT ON COLUMN public."ArtTDataElement"."InformationTypeIDn"
    IS 'Then InformationTypeIDn is the IdNum of the type of information that the record represents.';

COMMENT ON COLUMN public."ArtTDataElement"."IDIsUsed"
    IS 'The IDIsUsed determines if the registry is used or not.';

COMMENT ON COLUMN public."ArtTDataElement"."StateIDn"
    IS 'The StatedIDn define if the record is enable or not.';

COMMENT ON COLUMN public."ArtTDataElement"."CreatedByIDn"
    IS 'The CreatedByIDn is the IdNum of the user who created the record.';

COMMENT ON COLUMN public."ArtTDataElement"."LastModifiedByIDn"
    IS 'The LastModifiedByIDn is the IdNum of the last user who modified the record.';

COMMENT ON COLUMN public."ArtTDataElement"."OwnerIDn"
    IS 'The OwnerIDn is the IdNum of the record owner.';

COMMENT ON COLUMN public."ArtTDataElement"."DateCreated"
    IS 'The DateCreated is the record creation date with UTC.';

COMMENT ON COLUMN public."ArtTDataElement"."DateTimeStamp"
    IS 'The DateTimeStamp is the date of the last modification of the record with UTC.';

COMMENT ON COLUMN public."ArtTDataElement"."TableHistory"
    IS 'The TableHistory contain then change history of each column.';
COMMENT ON CONSTRAINT "Pk_IDNum" ON public."ArtTDataElement"
    IS 'The sequence ArtTDataElement_seq generate the nextval';

COMMENT ON CONSTRAINT "Unique_ID" ON public."ArtTDataElement"
    IS 'Is the uniqueidentifier';
COMMENT ON CONSTRAINT "Unique_IDNameScopeCompLang" ON public."ArtTDataElement"
    IS 'A name can be unique for a ScopeId, for a CompanyId, and LanguageId.
Thats mean, Pampa can be a brand or a thin, depend of its scope.';
COMMENT ON CONSTRAINT "Unique_IDScopeIDCode" ON public."ArtTDataElement"
    IS 'A CodeId can be unique for a ScopeId, for a CompanyId.
Thats mean, you can''t duplicate the CodeId for one scope.';

-- Trigger: ArtBeforeInsert_Trg
DROP TRIGGER IF EXISTS "ArtBeforeInsert_Trg" ON public."ArtTDataElement";
CREATE TRIGGER "ArtBeforeInsert_Trg"
    BEFORE INSERT
    ON public."ArtTDataElement"
    FOR EACH ROW
    EXECUTE FUNCTION public."ArtBeforeInsert_tfnc"();

COMMENT ON TRIGGER "ArtBeforeInsert_Trg" ON public."ArtTDataElement"
    IS 'Set the IDCode and the DateCreated';

-- Trigger: ArtBeforeUpdate_Trg
DROP TRIGGER IF EXISTS "ArtBeforeUpdate_Trg" ON public."ArtTDataElement";

CREATE TRIGGER "ArtBeforeUpdate_Trg"
    BEFORE UPDATE 
    ON public."ArtTDataElement"
    FOR EACH ROW
    EXECUTE FUNCTION public."ArtBeforeUpdate_tfnc"();

COMMENT ON TRIGGER "ArtBeforeUpdate_Trg" ON public."ArtTDataElement"
    IS 'Set the History field';
